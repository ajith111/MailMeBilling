// <auto-generated />
using System;
using MailMeBilling.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MailMeBilling.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200728072526_branch")]
    partial class branch
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MailMeBilling.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aboutshop")
                        .HasColumnType("text");

                    b.Property<string>("BranchAddress")
                        .HasColumnType("text");

                    b.Property<string>("Branchname")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<string>("Shopname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("branch");
                });

            modelBuilder.Entity("MailMeBilling.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Branddescription")
                        .HasColumnType("text");

                    b.Property<string>("Brandname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("brand");
                });

            modelBuilder.Entity("MailMeBilling.Models.Category", b =>
                {
                    b.Property<int>("categoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Categorydiscription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Categorys")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("categoryid");

                    b.ToTable("category");
                });

            modelBuilder.Entity("MailMeBilling.Models.Color", b =>
                {
                    b.Property<int>("Colorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Colors")
                        .HasColumnType("text");

                    b.Property<string>("Colorsdscription")
                        .HasColumnType("text");

                    b.HasKey("Colorid");

                    b.ToTable("color");
                });

            modelBuilder.Entity("MailMeBilling.Models.Creditpaymenthistry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Customername")
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<DateTime>("Paiddate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Recivedby")
                        .HasColumnType("text");

                    b.Property<int>("billid")
                        .HasColumnType("int");

                    b.Property<string>("paymenttype")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("id");

                    b.ToTable("creditpaymenthistries");
                });

            modelBuilder.Entity("MailMeBilling.Models.CustomerDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Customername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Emailid")
                        .HasColumnType("text");

                    b.Property<string>("Entryby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Entrydate")
                        .HasColumnType("datetime");

                    b.Property<string>("Mobilenumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<int>("Shopid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("customerdetails");
                });

            modelBuilder.Entity("MailMeBilling.Models.Customerpaymenthistry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Customername")
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<DateTime>("Paiddate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Recivedby")
                        .HasColumnType("text");

                    b.Property<int>("billid")
                        .HasColumnType("int");

                    b.Property<string>("paymenttype")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("id");

                    b.ToTable("customerpaymenthistry");
                });

            modelBuilder.Entity("MailMeBilling.Models.Expens", b =>
                {
                    b.Property<int>("eid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<string>("dic")
                        .HasColumnType("text");

                    b.Property<string>("drivername")
                        .HasColumnType("text");

                    b.Property<string>("drmobile")
                        .HasColumnType("text");

                    b.Property<string>("employeename")
                        .HasColumnType("text");

                    b.Property<string>("empmobile")
                        .HasColumnType("text");

                    b.Property<string>("entryby")
                        .HasColumnType("text");

                    b.Property<DateTime>("entrydate")
                        .HasColumnType("datetime");

                    b.Property<string>("ftype")
                        .HasColumnType("text");

                    b.Property<string>("fulestation")
                        .HasColumnType("text");

                    b.Property<byte[]>("idpro")
                        .HasColumnType("varbinary(4000)");

                    b.Property<string>("reason")
                        .HasColumnType("text");

                    b.Property<string>("regno")
                        .HasColumnType("text");

                    b.Property<string>("resonemp")
                        .HasColumnType("text");

                    b.Property<string>("totalkg")
                        .HasColumnType("text");

                    b.Property<string>("vtype")
                        .HasColumnType("text");

                    b.HasKey("eid");

                    b.ToTable("expens");
                });

            modelBuilder.Entity("MailMeBilling.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Userid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("login");
                });

            modelBuilder.Entity("MailMeBilling.Models.Product", b =>
                {
                    b.Property<int>("productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Entryby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Entrydate")
                        .HasColumnType("datetime");

                    b.Property<string>("Hsncode")
                        .HasColumnType("text");

                    b.Property<decimal>("Purchaserate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Salesrate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SubcCategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("productimage")
                        .HasColumnType("varbinary(4000)");

                    b.Property<string>("productname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("stock")
                        .HasColumnType("bigint");

                    b.HasKey("productid");

                    b.ToTable("product");
                });

            modelBuilder.Entity("MailMeBilling.Models.Purchaseinvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Hsncode")
                        .HasColumnType("text");

                    b.Property<string>("Productname")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Subcategory")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("purchaseinvoices");
                });

            modelBuilder.Entity("MailMeBilling.Models.Purchaseinvoicesummery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billid")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Gst")
                        .HasColumnType("text");

                    b.Property<string>("Mobilenumber")
                        .HasColumnType("text");

                    b.Property<string>("Paymenttype")
                        .HasColumnType("text");

                    b.Property<string>("Refcode")
                        .HasColumnType("text");

                    b.Property<decimal>("Totalamount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Totalqty")
                        .HasColumnType("int");

                    b.Property<string>("Vendorrname")
                        .HasColumnType("text");

                    b.Property<string>("ntow")
                        .HasColumnType("text");

                    b.Property<decimal>("paid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.Property<byte[]>("upload")
                        .HasColumnType("varbinary(4000)");

                    b.HasKey("id");

                    b.ToTable("purchaseinvoicesummeries");
                });

            modelBuilder.Entity("MailMeBilling.Models.Purchasereturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Hsncode")
                        .HasColumnType("text");

                    b.Property<string>("Productname")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Resion")
                        .HasColumnType("text");

                    b.Property<string>("Subcategory")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("purchasereturns");
                });

            modelBuilder.Entity("MailMeBilling.Models.Purchasereturnpaymenthistry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Customername")
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<DateTime>("Paiddate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Recivedby")
                        .HasColumnType("text");

                    b.Property<int>("billid")
                        .HasColumnType("int");

                    b.Property<string>("paymenttype")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("id");

                    b.ToTable("purchasereturnpaymenthistries");
                });

            modelBuilder.Entity("MailMeBilling.Models.Purchasereturnsummery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billid")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Customername")
                        .HasColumnType("text");

                    b.Property<int>("Gst")
                        .HasColumnType("int");

                    b.Property<string>("Mobilenumber")
                        .HasColumnType("text");

                    b.Property<decimal>("Paid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Paymenttype")
                        .HasColumnType("text");

                    b.Property<string>("Refcode")
                        .HasColumnType("text");

                    b.Property<decimal>("Totalamount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Totalqty")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("purchasereturnsummeries");
                });

            modelBuilder.Entity("MailMeBilling.Models.RolleDetails", b =>
                {
                    b.Property<int>("Employeeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Comfirmpassword")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Entryby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Entrydate")
                        .HasColumnType("datetime");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mobilenumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Roll")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Employeeid");

                    b.ToTable("employeedetails");
                });

            modelBuilder.Entity("MailMeBilling.Models.SalesReturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Hsncode")
                        .HasColumnType("text");

                    b.Property<string>("Productname")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Resion")
                        .HasColumnType("text");

                    b.Property<string>("Subcategory")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("salesreturns");
                });

            modelBuilder.Entity("MailMeBilling.Models.Salesinvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Hsncode")
                        .HasColumnType("text");

                    b.Property<string>("Productname")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Subcategory")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("salesinvoices");
                });

            modelBuilder.Entity("MailMeBilling.Models.Salesinvoicesummery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billid")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<decimal>("Cgst")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Customername")
                        .HasColumnType("text");

                    b.Property<int>("Gst")
                        .HasColumnType("int");

                    b.Property<decimal>("Igst")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Mobilenumber")
                        .HasColumnType("text");

                    b.Property<decimal>("Paid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Paymenttype")
                        .HasColumnType("text");

                    b.Property<string>("Refcode")
                        .HasColumnType("text");

                    b.Property<decimal>("Sgst")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Totalamount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Totalqty")
                        .HasColumnType("int");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<decimal>("nettotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ntow")
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("salesinvoicesummery");
                });

            modelBuilder.Entity("MailMeBilling.Models.Salesreturnpaymenthistry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Customername")
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<DateTime>("Paiddate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Recivedby")
                        .HasColumnType("text");

                    b.Property<int>("billid")
                        .HasColumnType("int");

                    b.Property<string>("paymenttype")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("id");

                    b.ToTable("salesreturnpaymenthistries");
                });

            modelBuilder.Entity("MailMeBilling.Models.Salesreturnsummery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billid")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Customername")
                        .HasColumnType("text");

                    b.Property<int>("Gst")
                        .HasColumnType("int");

                    b.Property<string>("Mobilenumber")
                        .HasColumnType("text");

                    b.Property<decimal>("Paid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Paymenttype")
                        .HasColumnType("text");

                    b.Property<string>("Refcode")
                        .HasColumnType("text");

                    b.Property<decimal>("Totalamount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Totalqty")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("salesreturnsummeries");
                });

            modelBuilder.Entity("MailMeBilling.Models.SubCategory", b =>
                {
                    b.Property<int>("Subcategoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Subcatagory")
                        .HasColumnType("text");

                    b.Property<string>("Subcatagorydiscription")
                        .HasColumnType("text");

                    b.HasKey("Subcategoryid");

                    b.ToTable("subcategory");
                });

            modelBuilder.Entity("MailMeBilling.Models.Tmppurchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Hsncode")
                        .HasColumnType("text");

                    b.Property<string>("Productname")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Subcategory")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tmppurchases");
                });

            modelBuilder.Entity("MailMeBilling.Models.Tmppurchasereturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Hsncode")
                        .HasColumnType("text");

                    b.Property<string>("Productname")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Reasion")
                        .HasColumnType("text");

                    b.Property<string>("Subcategory")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tmppurchasereturns");
                });

            modelBuilder.Entity("MailMeBilling.Models.Tmpsalesreturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Hsncode")
                        .HasColumnType("text");

                    b.Property<string>("Productname")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Reasion")
                        .HasColumnType("text");

                    b.Property<string>("Subcategory")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tmpsalesreturns");
                });

            modelBuilder.Entity("MailMeBilling.Models.Vendor", b =>
                {
                    b.Property<int>("vendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Accountnumber")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Bankname")
                        .HasColumnType("text");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Entryby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Entrydate")
                        .HasColumnType("datetime");

                    b.Property<string>("Ifsccode")
                        .HasColumnType("text");

                    b.Property<string>("Mobilenumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bankbranch")
                        .HasColumnType("text");

                    b.HasKey("vendorId");

                    b.ToTable("vendor");
                });

            modelBuilder.Entity("MailMeBilling.Models.Vendorpayment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<DateTime>("Paiddate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Recivedby")
                        .HasColumnType("text");

                    b.Property<int>("billid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("paymenttype")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("id");

                    b.ToTable("vendorpayments");
                });

            modelBuilder.Entity("MailMeBilling.Models.creditnote", b =>
                {
                    b.Property<int>("cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("addby")
                        .HasColumnType("text");

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("branch")
                        .HasColumnType("text");

                    b.Property<DateTime>("cdate")
                        .HasColumnType("datetime");

                    b.Property<string>("mobilenumber")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("particular")
                        .HasColumnType("text");

                    b.Property<string>("paymenttype")
                        .HasColumnType("text");

                    b.Property<string>("person")
                        .HasColumnType("text");

                    b.Property<string>("refno")
                        .HasColumnType("text");

                    b.Property<decimal>("totalamount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("cid");

                    b.ToTable("creditnote");
                });

            modelBuilder.Entity("MailMeBilling.Models.tempseccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Billby")
                        .HasColumnType("text");

                    b.Property<DateTime>("Billdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Hsncode")
                        .HasColumnType("text");

                    b.Property<string>("Productname")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Subcategory")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tempseccions");
                });
#pragma warning restore 612, 618
        }
    }
}
